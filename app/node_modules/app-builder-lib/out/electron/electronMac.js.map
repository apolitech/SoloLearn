{"version":3,"sources":["../../src/electron/electronMac.ts"],"names":[],"mappings":"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","sourcesContent":["import BluebirdPromise from \"bluebird-lst\"\nimport { asArray, getPlatformIconFileName, InvalidConfigurationError, log } from \"builder-util\"\nimport { copyOrLinkFile, unlinkIfExists } from \"builder-util/out/fs\"\nimport { readFile, rename, utimes, writeFile } from \"fs-extra-p\"\nimport * as path from \"path\"\nimport { build as buildPlist, parse as parsePlist } from \"plist\"\nimport { orIfFileNotExist } from \"builder-util/out/promise\"\nimport { filterCFBundleIdentifier } from \"../appInfo\"\nimport { AsarIntegrity } from \"../asar/integrity\"\nimport MacPackager from \"../macPackager\"\nimport { normalizeExt } from \"../platformPackager\"\n\nfunction doRename(basePath: string, oldName: string, newName: string) {\n  return rename(path.join(basePath, oldName), path.join(basePath, newName))\n}\n\nfunction moveHelpers(frameworksPath: string, appName: string, prefix: string): Promise<any> {\n  return BluebirdPromise.map([\" Helper\", \" Helper EH\", \" Helper NP\"], suffix => {\n    const executableBasePath = path.join(frameworksPath, `${prefix}${suffix}.app`, \"Contents\", \"MacOS\")\n    return doRename(executableBasePath, `${prefix}${suffix}`, appName + suffix)\n      .then(() => doRename(frameworksPath, `${prefix}${suffix}.app`, `${appName}${suffix}.app`))\n  })\n}\n\n/** @internal */\nexport async function createMacApp(packager: MacPackager, appOutDir: string, asarIntegrity: AsarIntegrity | null) {\n  const appInfo = packager.appInfo\n  const appFilename = appInfo.productFilename\n\n  const contentsPath = path.join(appOutDir, packager.info.framework.distMacOsAppName, \"Contents\")\n  const frameworksPath = path.join(contentsPath, \"Frameworks\")\n  const loginItemPath = path.join(contentsPath, \"Library\", \"LoginItems\")\n\n  const appPlistFilename = path.join(contentsPath, \"Info.plist\")\n  const helperPlistFilename = path.join(frameworksPath, `${packager.electronDistMacOsExecutableName} Helper.app`, \"Contents\", \"Info.plist\")\n  const helperEHPlistFilename = path.join(frameworksPath, `${packager.electronDistMacOsExecutableName} Helper EH.app`, \"Contents\", \"Info.plist\")\n  const helperNPPlistFilename = path.join(frameworksPath, `${packager.electronDistMacOsExecutableName} Helper NP.app`, \"Contents\", \"Info.plist\")\n  const helperLoginPlistFilename = path.join(loginItemPath, `${packager.electronDistMacOsExecutableName} Login Helper.app`, \"Contents\", \"Info.plist\")\n\n  const buildMetadata = packager.config!\n  const fileContents: Array<string | null> = await BluebirdPromise.map([\n    appPlistFilename,\n    helperPlistFilename,\n    helperEHPlistFilename,\n    helperNPPlistFilename,\n    helperLoginPlistFilename,\n    (buildMetadata as any)[\"extend-info\"]\n  ], it => it == null ? it : orIfFileNotExist(readFile(it, \"utf8\"), null))\n  const appPlist = parsePlist(fileContents[0]!!)\n  const helperPlist = parsePlist(fileContents[1]!!)\n  const helperEHPlist = parsePlist(fileContents[2]!!)\n  const helperNPPlist = parsePlist(fileContents[3]!!)\n  const helperLoginPlist = fileContents[4] == null ? null : parsePlist(fileContents[4]!!)\n\n  // if an extend-info file was supplied, copy its contents in first\n  if (fileContents[5] != null) {\n    Object.assign(appPlist, parsePlist(fileContents[5]!!))\n  }\n\n  const oldHelperBundleId = (buildMetadata as any)[\"helper-bundle-id\"]\n  if (oldHelperBundleId != null) {\n    log.warn(\"build.helper-bundle-id is deprecated, please set as build.mac.helperBundleId\")\n  }\n  const helperBundleIdentifier = filterCFBundleIdentifier(packager.platformSpecificBuildOptions.helperBundleId || oldHelperBundleId || `${appInfo.macBundleIdentifier}.helper`)\n\n  await packager.applyCommonInfo(appPlist, contentsPath)\n\n  helperPlist.CFBundleExecutable = `${appFilename} Helper`\n  helperEHPlist.CFBundleExecutable = `${appFilename} Helper EH`\n  helperNPPlist.CFBundleExecutable = `${appFilename} Helper NP`\n  if (helperLoginPlist != null) {\n    helperLoginPlist.CFBundleExecutable = `${appFilename} Login Helper`\n  }\n\n  helperPlist.CFBundleDisplayName = `${appInfo.productName} Helper`\n  helperEHPlist.CFBundleDisplayName = `${appInfo.productName} Helper EH`\n  helperNPPlist.CFBundleDisplayName = `${appInfo.productName} Helper NP`\n  if (helperLoginPlist != null) {\n    helperLoginPlist.CFBundleDisplayName = `${appInfo.productName} Login Helper`\n  }\n\n  helperPlist.CFBundleIdentifier = helperBundleIdentifier\n  helperEHPlist.CFBundleIdentifier = `${helperBundleIdentifier}.EH`\n  helperNPPlist.CFBundleIdentifier = `${helperBundleIdentifier}.NP`\n  if (helperLoginPlist != null) {\n    // noinspection SpellCheckingInspection\n    helperLoginPlist.CFBundleIdentifier = `${appInfo.macBundleIdentifier}.loginhelper`\n  }\n\n  helperPlist.CFBundleVersion = appPlist.CFBundleVersion\n  helperEHPlist.CFBundleVersion = appPlist.CFBundleVersion\n  helperNPPlist.CFBundleVersion = appPlist.CFBundleVersion\n  if (helperLoginPlist != null) {\n    helperLoginPlist.CFBundleVersion = appPlist.CFBundleVersion\n  }\n\n  const protocols = asArray(buildMetadata.protocols).concat(asArray(packager.platformSpecificBuildOptions.protocols))\n  if (protocols.length > 0) {\n    appPlist.CFBundleURLTypes = protocols.map(protocol => {\n      const schemes = asArray(protocol.schemes)\n      if (schemes.length === 0) {\n        throw new InvalidConfigurationError(`Protocol \"${protocol.name}\": must be at least one scheme specified`)\n      }\n      return {\n        CFBundleURLName: protocol.name,\n        CFBundleTypeRole: protocol.role || \"Editor\",\n        CFBundleURLSchemes: schemes.slice()\n      }\n    })\n  }\n\n  const resourcesPath = path.join(contentsPath, \"Resources\")\n\n  const fileAssociations = packager.fileAssociations\n  if (fileAssociations.length > 0) {\n    appPlist.CFBundleDocumentTypes = await BluebirdPromise.map(fileAssociations, async fileAssociation => {\n      const extensions = asArray(fileAssociation.ext).map(normalizeExt)\n      const customIcon = await packager.getResource(getPlatformIconFileName(fileAssociation.icon, true), `${extensions[0]}.icns`)\n      let iconFile = appPlist.CFBundleIconFile\n      if (customIcon != null) {\n        iconFile = path.basename(customIcon)\n        await copyOrLinkFile(customIcon, path.join(resourcesPath, iconFile))\n      }\n\n      const result = {\n        CFBundleTypeExtensions: extensions,\n        CFBundleTypeName: fileAssociation.name || extensions[0],\n        CFBundleTypeRole: fileAssociation.role || \"Editor\",\n        CFBundleTypeIconFile: iconFile\n      } as any\n\n      if (fileAssociation.isPackage) {\n        result.LSTypeIsPackage = true\n      }\n      return result\n    })\n  }\n\n  if (asarIntegrity != null) {\n    appPlist.AsarIntegrity = JSON.stringify(asarIntegrity)\n  }\n\n  await Promise.all([\n    writeFile(appPlistFilename, buildPlist(appPlist)),\n    writeFile(helperPlistFilename, buildPlist(helperPlist)),\n    writeFile(helperEHPlistFilename, buildPlist(helperEHPlist)),\n    writeFile(helperNPPlistFilename, buildPlist(helperNPPlist)),\n    helperLoginPlist == null ? Promise.resolve() : writeFile(helperLoginPlistFilename, buildPlist(helperLoginPlist)),\n    doRename(path.join(contentsPath, \"MacOS\"), packager.electronDistMacOsExecutableName, appPlist.CFBundleExecutable),\n    unlinkIfExists(path.join(appOutDir, \"LICENSE\")),\n    unlinkIfExists(path.join(appOutDir, \"LICENSES.chromium.html\")),\n  ])\n\n  await moveHelpers(frameworksPath, appFilename, packager.electronDistMacOsExecutableName)\n\n  if (helperLoginPlist != null) {\n    const prefix = packager.electronDistMacOsExecutableName\n    const suffix = \" Login Helper\"\n    const executableBasePath = path.join(loginItemPath, `${prefix}${suffix}.app`, \"Contents\", \"MacOS\")\n    await doRename(executableBasePath, `${prefix}${suffix}`, appFilename + suffix)\n      .then(() => doRename(loginItemPath, `${prefix}${suffix}.app`, `${appFilename}${suffix}.app`))\n  }\n  const appPath = path.join(appOutDir, `${appFilename}.app`)\n  await rename(path.dirname(contentsPath), appPath)\n  // https://github.com/electron-userland/electron-builder/issues/840\n  const now = Date.now() / 1000\n  await utimes(appPath, now, now)\n}"],"sourceRoot":""}
