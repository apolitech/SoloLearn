{"version":3,"sources":["../../src/util/config.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AACA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AACA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AACA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AACA;;AACA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAEA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;;;AAEA;AACA,SAAS,YAAT,CAAsB,MAAtB,EAA6C,iBAA7C,EAA6E;AAC3E;AACA,QAAM,OAAO,GAAG,KAAK,CAAC,OAAN,CAAc,MAAM,CAAC,OAArB,IAAgC,iBAAiB,CAAC,OAAlD,GAA4D,IAA5E;;AACA,MAAI,OAAO,IAAI,IAAf,EAAqB;AACnB,WAAQ,iBAAyB,CAAC,OAAlC;AACD;;AAED,iCAAW,MAAX,EAAmB,iBAAnB;;AAEA,MAAI,OAAO,IAAI,IAAf,EAAqB;AACnB;AACD;;AAED,QAAM,UAAU,GAAG,MAAM,CAAC,OAA1B;;AACA,MAAI,UAAU,CAAC,MAAX,KAAsB,CAA1B,EAA6B;AAC3B,IAAA,MAAM,CAAC,OAAP,GAAiB,OAAjB;AACD,GAFD,MAGK;AACH;AACA,IAAA,MAAM,CAAC,MAAP,CAAc,UAAU,CAAC,CAAD,CAAxB,EAA6B,OAA7B;AACD;AACF;;;2CAEM,WAAyB,UAAzB,EAA6C,UAA7C,EAAwE,iBAAxE,EAA6H,eAAA,GAAuD,KAAI,eAAJ,EAAS,MAAM,4CAAqB,0BAAS,IAAI,CAAC,IAAL,CAAU,UAAV,EAAsB,cAAtB,CAAT,CAArB,CAAf,CAApL,EAAyQ;AAC9Q,UAAM,aAAa,GAAsB;AAAC,MAAA,UAAU,EAAE,OAAb;AAAsB,MAAA,cAAc,EAAE,kBAAtC;AAA0D,MAAA,UAA1D;AAAsE,MAAA;AAAtE,KAAzC;AACA,UAAM,sBAAsB,GAAG,MAAM,iCAA0B,aAA1B,EAAyC,UAAzC,CAArC;AACA,UAAM,MAAM,GAAG,sBAAsB,IAAI,IAA1B,GAAiC,EAAjC,GAAsC,sBAAsB,CAAC,MAA5E;;AACA,QAAI,iBAAiB,IAAI,IAAzB,EAA+B;AAC7B,MAAA,YAAY,CAAC,MAAD,EAAS,iBAAT,CAAZ;AACD;;AAED,QAAI,sBAAsB,IAAI,IAA9B,EAAoC;AAClC,yBAAI,IAAJ,CAAS;AAAC,QAAA,IAAI,EAAE,sBAAsB,CAAC,UAAvB,IAAqC,IAArC,GAA4C,8BAA5C,GAA6E,sBAAsB,CAAC;AAA3G,OAAT,EAAiI,sBAAjI;AACD;;AAED,QAAI,WAAW,GAAG,MAAM,CAAC,OAAzB;;AACA,QAAI,WAAW,IAAI,IAAf,IAAuB,WAAW,KAAK,IAA3C,EAAiD;AAC/C,YAAM,QAAQ,GAAG,OAAM,eAAe,CAAC,KAAtB,KAA+B,EAAhD;AACA,YAAM,eAAe,GAAG,QAAQ,CAAC,eAAjC;AACA,YAAM,YAAY,GAAG,QAAQ,CAAC,YAA9B;;AACA,UAAK,YAAY,IAAI,IAAhB,IAAwB,mBAAmB,YAA5C,IAA8D,eAAe,IAAI,IAAnB,IAA2B,mBAAmB,eAAhH,EAAkI;AAChI,QAAA,WAAW,GAAG,WAAd;AACA,QAAA,MAAM,CAAC,OAAP,GAAiB,WAAjB;AACD,OAHD,MAIK,IAAI,eAAe,IAAI,IAAnB,IAA2B,sBAAsB,eAArD,EAAsE;AACzE,QAAA,WAAW,GAAG,uCAAd;AACA,QAAA,MAAM,CAAC,OAAP,GAAiB,WAAjB;AACD;AACF;;AAED,QAAI,WAAW,IAAI,IAAnB,EAAyB;AACvB,aAAO,+BAAW,gBAAgB,EAA3B,EAA+B,MAA/B,CAAP;AACD;;AAED,QAAI,YAAJ;;AACA,QAAI,WAAW,KAAK,WAApB,EAAiC;AAC/B,MAAA,YAAY,GAAG,MAAM,yBAAS,UAAT,CAArB;;AACA,yBAAI,IAAJ,CAAS;AAAC,QAAA,MAAM,EAAE;AAAT,OAAT,EAAgC,6BAAhC;AACD,KAHD,MAIK;AACH,YAAM,4BAA4B,GAAG,MAAM,wCAAgC,aAAhC,EAA+C,WAA/C,CAA3C;;AACA,yBAAI,IAAJ,CAAS;AAAC,QAAA,IAAI,EAAE,4BAA4B,CAAC;AAApC,OAAT,EAA0D,6BAA1D;;AACA,MAAA,YAAY,GAAG,4BAA4B,CAAC,MAA5C;AACD,KAxC6Q,CA0C9Q;AACA;;;AACA,QAAI,YAAY,CAAC,KAAb,IAAsB,IAAtB,IAA8B,MAAM,CAAC,KAAP,IAAgB,IAA9C,KAAuD,KAAK,CAAC,OAAN,CAAc,MAAM,CAAC,KAArB,KAA+B,OAAO,MAAM,CAAC,KAAd,KAAwB,QAA9G,KAA2H,KAAK,CAAC,OAAN,CAAc,YAAY,CAAC,KAA3B,CAA3H,IAAgK,YAAY,CAAC,KAAb,CAAmB,MAAnB,GAA4B,CAAhM,EAAmM;AACjM,YAAM,WAAW,GAAG,YAAY,CAAC,KAAb,CAAmB,CAAnB,CAApB;;AACA,UAAI,OAAO,WAAP,KAAuB,QAAvB,KAAoC,WAAW,CAAC,IAAZ,IAAoB,IAApB,IAA4B,WAAW,CAAC,IAAZ,KAAqB,GAArF,CAAJ,EAA+F;AAC7F,QAAA,WAAW,CAAC,MAAZ,GAAqB,4BAAQ,WAAW,CAAC,MAApB,CAArB;AACA,QAAA,WAAW,CAAC,MAAZ,CAAmB,IAAnB,CAAwB,GAAG,4BAAQ,MAAM,CAAC,KAAf,CAA3B;AACA,eAAQ,MAAc,CAAC,KAAvB;AACD;AACF;;AAED,WAAO,+BAAW,gBAAgB,EAA3B,EAA+B,YAA/B,EAA6C,MAA7C,CAAP;AACD,G;;kBAtDqB,S;;;;;;;AAwDtB,SAAS,gBAAT,GAAyB;AACvB,SAAO;AACL,IAAA,WAAW,EAAE;AACX,MAAA,MAAM,EAAE,MADG;AAEX,MAAA,cAAc,EAAE;AAFL;AADR,GAAP;AAMD;;AAED,MAAM,iBAAiB,GAAG,KAAI,eAAJ,EAAS,MAAM,0BAAS,IAAI,CAAC,IAAL,CAAU,SAAV,EAAqB,IAArB,EAA2B,IAA3B,EAAiC,aAAjC,CAAT,CAAf,CAA1B;;;4CAEO,WAA8B,MAA9B,EAAqD,WAArD,EAA6E;AAClF,UAAM,aAAa,GAAG,MAAM,CAAC,aAA7B;;AACA,QAAI,aAAa,IAAI,IAArB,EAA2B;AACzB,UAAI,aAAa,CAAC,KAAd,IAAuB,IAA3B,EAAiC;AAC/B,cAAM,KAAI,wCAAJ,EAA8B,iDAA9B,CAAN;AACD;;AACD,UAAI,aAAa,CAAC,WAAd,IAA6B,IAAjC,EAAuC;AACrC,cAAM,KAAI,wCAAJ,EAA8B,mEAA9B,CAAN;AACD;AACF,KATiF,CAWlF;;;AACA,QAAI,MAAM,CAAC,sBAAP,KAAkC,KAAtC,EAA6C;AAC3C,MAAA,MAAM,CAAC,2BAAP,GAAqC,KAArC;AACD;;AAED,UAAM,sCAAgB,MAAhB,EAAwB,iBAAxB,EAA2C,CAAC,OAAD,EAAU,MAAV,KAAoB;AACnE,UAAI,WAAW,CAAC,SAAhB,EAA2B;AACzB,QAAA,WAAW,CAAC,GAAZ,CAAgB,eAAhB,EAAiC,IAAI,CAAC,SAAL,CAAe,MAAf,EAAuB,IAAvB,EAA6B,CAA7B,CAAjC;AACD;;AAED,aAAO,GAAG,OAAO;;;;;;;CAAjB;AAQD,KAbK,CAAN;AAcD,G;;kBA9BqB,c;;;;;;AAgCtB,MAAM,qBAAqB,GAAG,CAAC,KAAD,EAAQ,KAAR,CAA9B;;;4CAEO,WAA0C,UAA1C,EAA8D,UAA9D,EAAmG;AACxG,QAAI,UAAU,IAAI,IAAlB,EAAwB;AACtB,YAAM,YAAY,GAAG,IAAI,CAAC,OAAL,CAAa,UAAb,EAAyB,UAAzB,CAArB;AACA,YAAM,IAAI,GAAG,MAAM,sBAAW,YAAX,CAAnB;;AACA,UAAI,IAAI,IAAI,IAAZ,EAAkB;AAChB,cAAM,KAAI,wCAAJ,EAA8B,yBAAyB,UAAU,iBAAjE,CAAN;AACD,OAFD,MAGK,IAAI,CAAC,IAAI,CAAC,WAAL,EAAL,EAAyB;AAC5B,cAAM,KAAI,wCAAJ,EAA8B,yBAAyB,UAAU,qBAAjE,CAAN;AACD,OAFI,MAGA,IAAI,UAAU,KAAK,YAAnB,EAAiC;AACpC,2BAAI,IAAJ,CAAS;AAAC,UAAA,YAAY,EAAE;AAAf,SAAT,EAAqC,4FAArC;AACD;;AACD,aAAO,YAAP;AACD;;AAED,SAAK,MAAM,GAAX,IAAkB,qBAAlB,EAAyC;AACvC,YAAM,YAAY,GAAG,IAAI,CAAC,IAAL,CAAU,UAAV,EAAsB,GAAtB,CAArB;AACA,YAAM,WAAW,GAAG,IAAI,CAAC,IAAL,CAAU,YAAV,EAAwB,cAAxB,CAApB;AACA,YAAM,IAAI,GAAG,MAAM,sBAAW,WAAX,CAAnB;;AACA,UAAI,IAAI,IAAI,IAAR,IAAgB,IAAI,CAAC,MAAL,EAApB,EAAmC;AACjC,eAAO,YAAP;AACD;AACF;;AACD,WAAO,UAAP;AACD,G;;kBAzBqB,0B","sourcesContent":["import { asArray, DebugLogger, InvalidConfigurationError, log, deepAssign } from \"builder-util\"\nimport { statOrNull } from \"builder-util/out/fs\"\nimport { readJson } from \"fs-extra-p\"\nimport { Lazy } from \"lazy-val\"\nimport * as path from \"path\"\nimport { getConfig as _getConfig, loadParentConfig, orNullIfFileNotExist, ReadConfigRequest, validateConfig as _validateConfig } from \"read-config-file\"\nimport { Configuration } from \"../configuration\"\nimport { reactCra } from \"../presets/rectCra\"\n\n// https://github.com/electron-userland/electron-builder/issues/1847\nfunction mergePublish(config: Configuration, configFromOptions: Configuration) {\n  // if config from disk doesn't have publish (or object), no need to handle, it will be simply merged by deepAssign\n  const publish = Array.isArray(config.publish) ? configFromOptions.publish : null\n  if (publish != null) {\n    delete (configFromOptions as any).publish\n  }\n\n  deepAssign(config, configFromOptions)\n\n  if (publish == null) {\n    return\n  }\n\n  const listOnDisk = config.publish as Array<any>\n  if (listOnDisk.length === 0) {\n    config.publish = publish\n  }\n  else {\n    // apply to first\n    Object.assign(listOnDisk[0], publish)\n  }\n}\n\nexport async function getConfig(projectDir: string, configPath: string | null, configFromOptions: Configuration | null | undefined, packageMetadata: Lazy<{ [key: string]: any } | null> = new Lazy(() => orNullIfFileNotExist(readJson(path.join(projectDir, \"package.json\"))))): Promise<Configuration> {\n  const configRequest: ReadConfigRequest = {packageKey: \"build\", configFilename: \"electron-builder\", projectDir, packageMetadata}\n  const configAndEffectiveFile = await _getConfig<Configuration>(configRequest, configPath)\n  const config = configAndEffectiveFile == null ? {} : configAndEffectiveFile.result\n  if (configFromOptions != null) {\n    mergePublish(config, configFromOptions)\n  }\n\n  if (configAndEffectiveFile != null) {\n    log.info({file: configAndEffectiveFile.configFile == null ? 'package.json (\"build\" field)' : configAndEffectiveFile.configFile}, \"loaded configuration\")\n  }\n\n  let extendsSpec = config.extends\n  if (extendsSpec == null && extendsSpec !== null) {\n    const metadata = await packageMetadata.value || {}\n    const devDependencies = metadata.devDependencies\n    const dependencies = metadata.dependencies\n    if ((dependencies != null && \"react-scripts\" in dependencies) || (devDependencies != null && \"react-scripts\" in devDependencies)) {\n      extendsSpec = \"react-cra\"\n      config.extends = extendsSpec\n    }\n    else if (devDependencies != null && \"electron-webpack\" in devDependencies) {\n      extendsSpec = \"electron-webpack/electron-builder.yml\"\n      config.extends = extendsSpec\n    }\n  }\n\n  if (extendsSpec == null) {\n    return deepAssign(getDefaultConfig(), config)\n  }\n\n  let parentConfig: Configuration | null\n  if (extendsSpec === \"react-cra\") {\n    parentConfig = await reactCra(projectDir)\n    log.info({preset: extendsSpec}, \"loaded parent configuration\")\n  }\n  else {\n    const parentConfigAndEffectiveFile = await loadParentConfig<Configuration>(configRequest, extendsSpec)\n    log.info({file: parentConfigAndEffectiveFile.configFile}, \"loaded parent configuration\")\n    parentConfig = parentConfigAndEffectiveFile.result\n  }\n\n  // electron-webpack and electrify client config - want to exclude some files\n  // we add client files configuration to main parent file matcher\n  if (parentConfig.files != null && config.files != null && (Array.isArray(config.files) || typeof config.files === \"string\") && Array.isArray(parentConfig.files) && parentConfig.files.length > 0) {\n    const mainFileSet = parentConfig.files[0]\n    if (typeof mainFileSet === \"object\" && (mainFileSet.from == null || mainFileSet.from === \".\")) {\n      mainFileSet.filter = asArray(mainFileSet.filter)\n      mainFileSet.filter.push(...asArray(config.files as any))\n      delete (config as any).files\n    }\n  }\n\n  return deepAssign(getDefaultConfig(), parentConfig, config)\n}\n\nfunction getDefaultConfig(): Configuration {\n  return {\n    directories: {\n      output: \"dist\",\n      buildResources: \"build\",\n    },\n  }\n}\n\nconst schemeDataPromise = new Lazy(() => readJson(path.join(__dirname, \"..\", \"..\", \"scheme.json\")))\n\nexport async function validateConfig(config: Configuration, debugLogger: DebugLogger) {\n  const extraMetadata = config.extraMetadata\n  if (extraMetadata != null) {\n    if (extraMetadata.build != null) {\n      throw new InvalidConfigurationError(`--em.build is deprecated, please specify as -c\"`)\n    }\n    if (extraMetadata.directories != null) {\n      throw new InvalidConfigurationError(`--em.directories is deprecated, please specify as -c.directories\"`)\n    }\n  }\n\n  // noinspection JSDeprecatedSymbols\n  if (config.npmSkipBuildFromSource === false) {\n    config.buildDependenciesFromSource = false\n  }\n\n  await _validateConfig(config, schemeDataPromise, (message, errors) => {\n    if (debugLogger.isEnabled) {\n      debugLogger.add(\"invalidConfig\", JSON.stringify(errors, null, 2))\n    }\n\n    return `${message}\n\nHow to fix:\n1. Open https://electron.build/configuration/configuration\n2. Search the option name on the page.\n  * Not found? The option was deprecated or not exists (check spelling).\n  * Found? Check that the option in the appropriate place. e.g. \"title\" only in the \"dmg\", not in the root.\n`\n  })\n}\n\nconst DEFAULT_APP_DIR_NAMES = [\"app\", \"www\"]\n\nexport async function computeDefaultAppDirectory(projectDir: string, userAppDir: string | null | undefined): Promise<string> {\n  if (userAppDir != null) {\n    const absolutePath = path.resolve(projectDir, userAppDir)\n    const stat = await statOrNull(absolutePath)\n    if (stat == null) {\n      throw new InvalidConfigurationError(`Application directory ${userAppDir} doesn't exists`)\n    }\n    else if (!stat.isDirectory()) {\n      throw new InvalidConfigurationError(`Application directory ${userAppDir} is not a directory`)\n    }\n    else if (projectDir === absolutePath) {\n      log.warn({appDirectory: userAppDir}, `Specified application directory equals to project dir — superfluous or wrong configuration`)\n    }\n    return absolutePath\n  }\n\n  for (const dir of DEFAULT_APP_DIR_NAMES) {\n    const absolutePath = path.join(projectDir, dir)\n    const packageJson = path.join(absolutePath, \"package.json\")\n    const stat = await statOrNull(packageJson)\n    if (stat != null && stat.isFile()) {\n      return absolutePath\n    }\n  }\n  return projectDir\n}"],"sourceRoot":""}
